openapi: 3.0.0
info:
  title: Final Project
  version: 1.0.0
  description: |
    **Final Project**  
tags:
  - name: Login & Register
    description: ------
  - name: Products
    description: ------
  - name: Users
    description: ------

servers:
  - url: http://localhost:8000
  - url: https://secondhand-2-binar-final.herokuapp.com

components:
  schemas:
    Login:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: number
              example: 1
            email:
              type: string
              example: name@gmail.com
            city:
              type: string
              example: city
            address:
              type: string
              example: address
            phone: 
              type: string
              example: 085754210823
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJ3YWZpQGdtYWlsLmNvbSIsIm5hbWUiOiJ3YWZpIiwiY2l0eSI6ImNpdHkiLCJhZGRyZXNzIjoiYWRkcmVzcyIsInBob25lIjoiMDg0Mjg0MjM0Mnh4IiwiaWF0IjoxNjU3NzEyMTc4fQ.bOik1mBzQVCBG_C0yq-2HW86S4PuIxE2V3Z1RQUjf0c
    LoginData:
      type: object
      properties:
        email:
          type: string
          example: name@gmail.com
        password:
          type: string
          example: 12345
    RegisterData:
      type: object
      properties:
        name:
          type: string
          example: name
        email:
          type: string
          example: name@gmail.com
        password:
          type: string
          example: 12345
    RegisterDataRes:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: name
        email:
          type: string
          example: name@gmail.com
        created_att:
          type: number
          format: datetime
          example: 1970-01-01 00:00:01  
        updated_at:
          type: number
          format: datetime
          example: 1970-01-01 00:00:01
        message:
          type: string
          example: Email kamu berhasil terdaftar
    ProfilData:
      type: object
      properties:
        city:
          type: string
          example: city
        address:
          type: string
          example: city 
        phone:
          type: string
          example: 085754210823 
    ProfilDataRes:
      type: object
      properties:
        name:
          type: string
          example: name
        email:
          type: string
          example: name@gmail.com
        password:
          type: string
          example: 12345
        city:
          type: string
          example: city
        address:
          type: string
          example: address 
        phone:
          type: string
          example: 085754210823 
        image_url:
          type: string
          example: https://res.cloudinary.com/djann8mt5/image/upload/v1657631544/binar-final-project/users/jqayyrhulgligcs6ucpd.jpg
    CurrentUser:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: name
        city:
          type: string
          example: city
        address:
          type: string
          example: address 
        phone:
          type: string
          example: 085754210823
        image:
          type: string
          example: https://res.cloudinary.com/djann8mt5/image/upload/v1657631544/binar-final-project/users/jqayyrhulgligcs6ucpd.jpg
    ProductsPost:
      type: object
      properties:
        user_id:
          type: number
          example: 1
        category_id:
          type: number
          example: 1
        name:
          type: string
          example: productName
        price:
          type: number
          format: float
          example: 100000.2
        description:
          type: string
          example: productDescription
    Products:
      type: object
      properties:
        category_id:
          type: number
          example: 1
        name:
          type: string
          example: productName
        price:
          type: number
          format: float
          example: 100000.2
        description:
          type: string
          example: productDescription
    AllProducts:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: productName
        price:
          type: number
          format: float
          example: 100000.2
        description:
          type: string
          example: productDescription
        status:
          type: string
          example: open_for_bid
        category:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: categoryName
        owner:
          type: object
          properties:
            id: 
              type: number
              example: 1
            name: 
              type: string
              example: name
            city:
              type: string
              example: city
            address:
              type: string
              example: address
            phone:
              type: string
              example: 085754210821
    ProductsId:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: productName
        price:
          type: number
          format: float
          example: 100000.1
        description:
          type: string
          example: productDescription
        status:
          type: string
          example: open_for_bid
        owner:  
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: name
            city: 
              type: string
              example: city
            image_url:
              type: string
              example: "https://res.cloudinary.com/djann8mt5/image/upload/v1657631544/binar-final-project/users/jqayyrhulgligcs6ucpd.jpg"
        category:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: categoryName

  requestBodies:
    LoginRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginData"
    RegisterRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterData"
    ProfilRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProfilData"
    ProductsRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Products"
    ProductsPostRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductsPost"
    ProductsRequestId:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductsId"
    ProductsRequestputId:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductsId"
  responses:
    LoginResponse:
      description: ok
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Login"
    RegisterResponse:
      description: ok
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterDataRes"
    ProfilResponse:
      description: Successfully updating profile
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProfilDataRes"
    CurrentUserResponse:
      description: ok
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CurrentUser"
    ProductResponse:
      description: PostProducts
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Products"
    ProductsResponse:
      description: List All Products
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AllProducts"
            example:
              - id: 1
                name: productName1
                price: 100000.1
                description: productDescription1
                status: open_for_bid
                category:
                  id: 1
                  name: categoryName
                owner:
                  id: 1
                  name: name1
                  city: city1
                  address: address1
                  phone: 085754210821
                images: [                  
                  {id: 1,
                  name: "https://res.cloudinary.com/djann8mt5/image/upload/v1657632067/binar-final-project/products/mpcihgalctsoaavwosxr.png"},
                  {id: 2,
                  name: "https://res.cloudinary.com/djann8mt5/image/upload/v1657632067/binar-final-project/products/mpcihgalctsoaavwosxr.png"},
                  {id: 3,
                  name: "https://res.cloudinary.com/djann8mt5/image/upload/v1657632067/binar-final-project/products/mpcihgalctsoaavwosxr.png"},
                  {id: 4,
                  name: "https://res.cloudinary.com/djann8mt5/image/upload/v1657632067/binar-final-project/products/mpcihgalctsoaavwosxr.png"}
                  ]
              - id: 2
                name: productName2
                price: 100000.2
                description: productDescription2
                status: open_for_bid
                category:
                  id: 2
                  name: categoryName
                owner:
                  id: 2
                  name: name2
                  city: city2
                  address: address2
                  phone: 085754210822
                images: [                  
                  {id: 5,
                  name: "https://res.cloudinary.com/djann8mt5/image/upload/v1657632067/binar-final-project/products/mpcihgalctsoaavwosxr.png"},
                  {id: 6,
                  name: "https://res.cloudinary.com/djann8mt5/image/upload/v1657632067/binar-final-project/products/mpcihgalctsoaavwosxr.png"},
                  {id: 7,
                  name: "https://res.cloudinary.com/djann8mt5/image/upload/v1657632067/binar-final-project/products/mpcihgalctsoaavwosxr.png"},
                  {id: 8,
                  name: "https://res.cloudinary.com/djann8mt5/image/upload/v1657632067/binar-final-project/products/mpcihgalctsoaavwosxr.png"}
                  ]
    ProductsByIdResponses:
      description: ok
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductsId"
    PutProductsByIDResponses:
      description: Successfully updated product
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductsId"
  
  securitySchemes:
    bearerAuth:
      type: http
      bearerFormat: JWT
      scheme: bearer

paths:
  /api/v1/login:
    post:
      tags:
        - Login & Register
      summary: Login
      description: Login endpoint
      requestBody:
        $ref: "#/components/requestBodies/LoginRequest"
      responses:
        200:
          $ref: "#/components/responses/LoginResponse"

  /api/v1/register:
    post:
      tags:
        - Login & Register
      summary: Register
      description: Register endpoint
      requestBody:
        $ref: "#/components/requestBodies/RegisterRequest"
      responses:
        200:
          $ref: '#/components/responses/RegisterResponse'

  /api/v1/profil:
    put:
      tags:
        - Users
      summary: Put Profil Users endpoint
      description: Put Profil Users endpoint
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/ProfilRequest"
      responses:
        200:
          $ref: "#/components/responses/ProfilResponse"
          
  /api/v1/currentuser:
    get:
      tags:
        - Users
      summary: Get Current User
      description: Get Current User
      security:
        - bearerAuth: []
      responses:
        200:
          $ref: '#/components/responses/CurrentUserResponse'
  
  /api/v1/usersimageupload:
    post:
      tags:
        - Users
      summary: Uploads image's user
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                id:
                  type: number
                  format: integer
      responses:
        200:
          description: Succesfully update image profile
    
  /api/v1/products:
    post:
      tags:
        - Products
      summary: Post Products
      description: Post Products endpoint
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/ProductsPostRequest"
      responses:
        200:
          $ref: "#/components/responses/ProductsByIdResponses"
    get:
      tags:
        - Products
      summary: Get Products
      parameters:
        - in: query
          name: userId
          schema:
            type: integer
          description: input user id in integer
        - in: query
          name: statusProduct
          schema:
            type: string
          description: input status product in string 
      description: Get Products endpoint
      responses:
        200:
          $ref: "#/components/responses/ProductsResponse"

  /api/v1/products/{id}:
    get:
      tags:
        - Products
      summary: Get Products by id
      description: Get Products by id endpoint
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: "#/components/responses/ProductsByIdResponses"

    put:
      tags:
        - Products
      summary: Put Products by id
      description: Put Products by id endpoint
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/ProductsRequest"
      responses:
        200:
          $ref: "#/components/responses/PutProductsByIDResponses"

    delete:
      tags:
        - Products
      summary: Delete Products by id
      description: Delete Products by id endpoint
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      security:
        - bearerAuth: []
      responses:
        200:
          description: delete
          
  /api/v1/productsimageupload:
    post:
      tags:
        - Products
      summary: Uploads image's products
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                productId:
                  type: number
                  format: integer
      responses:
        200:
          description: succes

  # /api/v1/products/sale
  #   get:
  #     tags:
  #       - Users
  #     summary: Get Products sale by user
  #     description: Get Products sale by user
  #     security:
  #       - bearerAuth: []
  #     responses:
  #       200:
  #         $ref: "#/components/responses/ProductsByIdResponses"
          
  # /api/v1/products/sold:
  #   get:
  #     tags:
  #       - Users
  #     summary: Get Products sold by user
  #     description: Get Products sold by user
  #     security:
  #       - bearerAuth: []
  #     responses:
  #       200:
  #         description: success
  